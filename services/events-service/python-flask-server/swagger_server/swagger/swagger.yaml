---
swagger: "2.0"
info:
  description: "Events API for ZeroWing Event Management System."
  version: "1.0.0"
  title: "Events API"
host: "localhost:8081"
basePath: "/v1"
schemes:
- "https"
- "http"
paths:
  /events:
    get:
      tags:
      - "Events"
      summary: "Retrieve a List of Events. Search by Event Title, Event category or\
        \ Event Description."
      operationId: "list_events"
      produces:
      - "application/json"
      parameters:
      - name: "event_title"
        in: "query"
        description: "The Event Title to search for."
        required: false
        type: "string"
      - name: "event_category"
        in: "query"
        description: "The Event Category to search for."
        required: false
        type: "string"
      - name: "event_desc"
        in: "query"
        description: "The Event Description to search for."
        required: false
        type: "string"
      responses:
        "200":
          description: "Returns a list of Events. Returns empty array if no Events\
            \ match the search criteria."
          schema:
            $ref: "#/definitions/EventList"
        "500":
          description: "Unexpected failure in the service layer."
          schema:
            $ref: "#/definitions/UnexpectedServiceError"
      x-swagger-router-controller: "swagger_server.controllers.events_controller"
  /events/{event_id}:
    get:
      tags:
      - "Events"
      summary: "Retrieve Event details by Event ID."
      operationId: "get_event_details"
      produces:
      - "application/json"
      parameters:
      - name: "event_id"
        in: "path"
        description: "ID of the Event to be retrieved."
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Event details successfully retrieved."
          schema:
            $ref: "#/definitions/Event"
        "404":
          description: "Event not found."
          schema:
            $ref: "#/definitions/EventNotFoundError"
        "500":
          description: "Unexpected failure in the service layer."
          schema:
            $ref: "#/definitions/UnexpectedServiceError"
      x-swagger-router-controller: "swagger_server.controllers.events_controller"
  /venues:
    get:
      tags:
      - "Venues"
      summary: "Retrieve a List of Venues. Search by Venue Name."
      operationId: "list_venues"
      produces:
      - "application/json"
      parameters:
      - name: "venue_name"
        in: "query"
        description: "The Venue Name to search for."
        required: false
        type: "string"
      responses:
        "200":
          description: "Returns a list of Venues. Returns empty array if no Venues\
            \ match the search criteria."
          schema:
            $ref: "#/definitions/VenueList"
        "500":
          description: "Unexpected failure in the service layer."
          schema:
            $ref: "#/definitions/UnexpectedServiceError"
      x-swagger-router-controller: "swagger_server.controllers.venues_controller"
    post:
      tags:
      - "Venues"
      summary: "Used to create a Venue."
      operationId: "create_venue"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Venue object containing Venue details."
        required: true
        schema:
          $ref: "#/definitions/Venue"
      responses:
        "201":
          description: "Venue created."
          schema:
            $ref: "#/definitions/Venue"
        "400":
          description: "Invalid input."
          schema:
            $ref: "#/definitions/InvalidInputError"
        "500":
          description: "Unexpected failure in the service layer."
          schema:
            $ref: "#/definitions/UnexpectedServiceError"
      x-swagger-router-controller: "swagger_server.controllers.venues_controller"
  /venues/{venue_id}:
    get:
      tags:
      - "Venues"
      summary: "Retrieve Venue details by Venue ID."
      operationId: "get_venue_details"
      produces:
      - "application/json"
      parameters:
      - name: "venue_id"
        in: "path"
        description: "ID of the Venue to be retrieved."
        required: true
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "Venue details successfully retrieved."
          schema:
            $ref: "#/definitions/Venue"
        "404":
          description: "Event not found."
          schema:
            $ref: "#/definitions/VenueNotFoundError"
        "500":
          description: "Unexpected failure in the service layer."
          schema:
            $ref: "#/definitions/UnexpectedServiceError"
      x-swagger-router-controller: "swagger_server.controllers.venues_controller"
definitions:
  VenueList:
    type: "array"
    items:
      $ref: "#/definitions/Venue"
  Venue:
    type: "object"
    properties:
      venue_id:
        type: "integer"
        format: "int64"
        example: 1
      venue_name:
        type: "string"
        example: "Sydney Opera House"
      venue_desc:
        type: "string"
        example: "The Sydney Opera House is a multi-venue performing arts centre in\
          \ Sydney."
      venue_img:
        type: "string"
        example: "1603dfd6-efb6-11ec-8ea0-0242ac120002.jpeg"
      venue_address:
        type: "string"
        example: "20 Smith Street, Newtown, NSW, 2000"
      seating:
        type: "array"
        items:
          $ref: "#/definitions/Seating"
    example:
      venue_name: "Sydney Opera House"
      venue_img: "1603dfd6-efb6-11ec-8ea0-0242ac120002.jpeg"
      venue_address: "20 Smith Street, Newtown, NSW, 2000"
      venue_desc: "The Sydney Opera House is a multi-venue performing arts centre\
        \ in Sydney."
      venue_id: 1
      seating:
      - seating_type: "front"
        seating_number: 100
      - seating_type: "front"
        seating_number: 100
  EventList:
    type: "array"
    items:
      $ref: "#/definitions/Event"
  Event:
    type: "object"
    properties:
      event_id:
        type: "integer"
        format: "int64"
        example: 1
      host_id:
        type: "integer"
        format: "int64"
        example: 12
      venue_id:
        type: "integer"
        format: "int64"
        example: 9
      event_title:
        type: "string"
        example: "Sydney KPOP Party"
      event_category:
        type: "string"
        example: "Music"
      event_short_desc:
        type: "string"
        example: "Sydney KPOP Party BTS Special!"
      event_desc:
        type: "string"
        example: "STRICTLY KPOP & K-HIPHOP! KPOP ALBUM GIVEAWAYS! LIVE DJS!"
      event_start_datetime:
        type: "string"
        example: "2015-03-25T19:00:00+10:00"
      event_end_datetime:
        type: "string"
        example: "2015-03-25T23:00:00+10:00"
      event_location:
        type: "string"
        example: "Shark Hotel Sydney, NSW"
      event_img:
        type: "string"
        example: "1603dfd6-efb6-11ec-8ea0-0242ac120002.jpeg"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
    example:
      event_short_desc: "Sydney KPOP Party BTS Special!"
      event_desc: "STRICTLY KPOP & K-HIPHOP! KPOP ALBUM GIVEAWAYS! LIVE DJS!"
      event_id: 1
      event_end_datetime: "2015-03-25T23:00:00+10:00"
      event_location: "Shark Hotel Sydney, NSW"
      event_title: "Sydney KPOP Party"
      event_img: "1603dfd6-efb6-11ec-8ea0-0242ac120002.jpeg"
      event_category: "Music"
      event_start_datetime: "2015-03-25T19:00:00+10:00"
      host_id: 12
      venue_id: 9
      tags:
      - name: "Jazz"
      - name: "Jazz"
  Tag:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Jazz"
    example:
      name: "Jazz"
  Seating:
    type: "object"
    properties:
      seating_type:
        type: "string"
        example: "front"
      seating_number:
        type: "integer"
        format: "int64"
        example: 100
    example:
      seating_type: "front"
      seating_number: 100
  Error:
    type: "object"
    properties:
      code:
        type: "string"
      type:
        type: "string"
      message:
        type: "string"
  EventNotFoundError:
    allOf:
    - $ref: "#/definitions/Error"
    - {}
    example:
      code: 404
      type: "EventNotFoundError"
      message: "The following Event does not exist: %event_id%"
  VenueNotFoundError:
    allOf:
    - $ref: "#/definitions/Error"
    - {}
    example:
      code: 404
      type: "VenueNotFoundError"
      message: "The following Venue does not exist: %event_id%"
  InvalidInputError:
    allOf:
    - $ref: "#/definitions/Error"
    - {}
    example:
      code: 400
      type: "InvalidInputError"
      message: "The following mandatory fields were not provided: %field_name_1%,\
        \ %field_name_2%"
  UnexpectedServiceError:
    allOf:
    - $ref: "#/definitions/Error"
    - {}
    example:
      code: 500
      type: "UnexpectedServiceError"
      message: "The following unexpected runtime error has occurred: %error%"
